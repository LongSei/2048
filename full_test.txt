### Optimize Expectimax algorithm with depth = 3
    10 test in 411.688 seconds
[Test 0 ]
[[ 1  6  3  2]
 [ 3  4  8  7]
 [10  6  3  2]
 [ 1  3  2  1]]
10
[Test 1 ]
[[3 4 1 7]
 [1 6 3 2]
 [2 5 6 3]
 [1 4 1 7]]
7
[Test 2 ]
[[4 1 3 1]
 [6 8 5 2]
 [2 9 7 3]
 [1 2 5 1]]
9
[Test 3 ]
[[1 2 1 8]
 [2 3 6 1]
 [6 7 5 3]
 [1 3 1 2]]
8
[Test 4 ]
[[1 2 6 3]
 [2 7 5 8]
 [5 6 9 1]
 [3 1 2 3]]
9
[Test 5 ]
[[10  2  4  2]
 [ 2  3  5  8]
 [ 6  1  6  3]
 [ 1  7  1  2]]
10
[Test 6 ]
[[2 1 3 2]
 [5 9 8 1]
 [1 6 4 7]
 [2 3 1 2]]
9
[Test 7 ]
[[2 4 3 2]
 [4 3 9 7]
 [3 6 5 3]
 [1 4 8 2]]
9
[Test 8 ]
[[1 7 3 2]
 [4 8 6 1]
 [6 7 9 4]
 [3 4 3 1]]
9
[Test 9 ]
[[1 4 3 2]
 [5 7 5 4]
 [3 4 6 1]
 [1 2 8 2]]
8
